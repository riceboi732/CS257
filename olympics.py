#Author: Victor Huang, Silas Zhao

#!/usr/bin/env python3

import psycopg2
import config
import sys

from config import password
from config import database
from config import user

# Connect to the database
try:
    connection = psycopg2.connect(database=database, user=user, password=password)
except Exception as e:
    print(e)
    exit()

# Query the database, leaving you with a "cursor"--an object you can
# use to iterate over the rows generated by your query.
try:
    cursor = connection.cursor()
    query = 'SELECT first_name, last_name FROM authors ORDER BY last_name'
    cursor.execute(query)
except Exception as e:
    print(e)
    exit()

# We have a cursor now. Iterate over its rows to print the results.
print('===== All authors =====')
for row in cursor:
    print(row[0], row[1])
print()

# Do you have information provided by your user (e.g. a search string)
# that needs to go into your SQL query? Since you can't trust users
# not to be malicious, you need to be very careful about how you use
# any input they provide. To avoid the very common and very dangerous
# security attack known as "SQL Injection", use the parameterized version of
# cursor.execute, like this. (We'll discuss SQL Injection in detail soon.)
search_string = 'BrontÃ«'
query = '''SELECT first_name, last_name
           FROM authors
           WHERE last_name = %s'''
try:
    cursor.execute(query, (search_string,))
except Exception as e:
    print(e)
    exit()

print('===== Authors with last name {0} ====='.format(search_string))
for row in cursor:
    print(row[0], row[1])
print()

# Don't forget to close the database connection.
connection.close()

